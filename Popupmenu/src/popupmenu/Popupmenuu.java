package popupmenu;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import java.awt.Font;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Manana
 */
public class Popupmenuu extends javax.swing.JFrame {
private Point puntoPopup;
    /**
     * Creates new form Popupmenuu
     */
    public Popupmenuu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Menu = new javax.swing.JPopupMenu();
        copiar = new javax.swing.JMenuItem();
        cortar = new javax.swing.JMenuItem();
        pegar = new javax.swing.JMenuItem();
        seleccionar = new javax.swing.JMenuItem();
        tipo = new javax.swing.JMenu();
        tipografia = new javax.swing.JMenuItem();
        tipografia2 = new javax.swing.JMenuItem();
        tipografia3 = new javax.swing.JMenuItem();
        buscar = new javax.swing.JMenuItem();
        Menu2 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("popupmenu/Bundle"); // NOI18N
        copiar.setText(bundle.getString("Popupmenuu.copiar.text")); // NOI18N
        copiar.setToolTipText(bundle.getString("Popupmenuu.copiar.toolTipText")); // NOI18N
        copiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiarActionPerformed(evt);
            }
        });
        Menu.add(copiar);

        cortar.setText(bundle.getString("Popupmenuu.cortar.text")); // NOI18N
        cortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cortarActionPerformed(evt);
            }
        });
        Menu.add(cortar);

        pegar.setText(bundle.getString("Popupmenuu.pegar.text")); // NOI18N
        pegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pegarActionPerformed(evt);
            }
        });
        Menu.add(pegar);

        seleccionar.setText(bundle.getString("Popupmenuu.seleccionar.text")); // NOI18N
        seleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarActionPerformed(evt);
            }
        });
        Menu.add(seleccionar);

        tipo.setText(bundle.getString("Popupmenuu.tipo.text")); // NOI18N

        tipografia.setText(bundle.getString("Popupmenuu.tipografia.text")); // NOI18N
        tipografia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipografiaActionPerformed(evt);
            }
        });
        tipo.add(tipografia);

        tipografia2.setText(bundle.getString("Popupmenuu.tipografia2.text")); // NOI18N
        tipografia2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipografia2ActionPerformed(evt);
            }
        });
        tipo.add(tipografia2);

        tipografia3.setText(bundle.getString("Popupmenuu.tipografia3.text")); // NOI18N
        tipografia3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipografia3ActionPerformed(evt);
            }
        });
        tipo.add(tipografia3);

        Menu.add(tipo);

        buscar.setText(bundle.getString("Popupmenuu.buscar.text")); // NOI18N
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });
        Menu.add(buscar);

        jMenuItem1.setText(bundle.getString("Popupmenuu.jMenuItem1.text")); // NOI18N
        Menu2.add(jMenuItem1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        area.setColumns(20);
        area.setRows(5);
        jScrollPane1.setViewportView(area);
        area.setComponentPopupMenu(Menu);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"e", "d", "w", "w"},
                {"w", "f", "w", null},
                {"wf", "w", "w", "ee"},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);
        jTable1.setComponentPopupMenu(Menu2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(181, 181, 181))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void copiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiarActionPerformed
        // TODO add your handling code here:
        String contenido= (String) area.getSelectedText();
        StringSelection selection = new StringSelection(contenido);
        Toolkit.getDefaultToolkit().getSystemClipboard().setContents(selection, null);
    }//GEN-LAST:event_copiarActionPerformed

    private void cortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cortarActionPerformed
        // TODO add your handling code here:
        String contenido= (String) area.getSelectedText();
        StringSelection selection = new StringSelection(contenido);
        Toolkit.getDefaultToolkit().getSystemClipboard().setContents(selection, null);
        area.replaceSelection("");                 
    }//GEN-LAST:event_cortarActionPerformed

    private void pegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pegarActionPerformed
        // TODO add your handling code here:
        String contenidoPortapapeles;
        try {
            contenidoPortapapeles = (String) Toolkit.getDefaultToolkit()
                    .getSystemClipboard()
                    .getData(java.awt.datatransfer.DataFlavor.stringFlavor);
            area.replaceSelection("");
            area.insert(contenidoPortapapeles, area.getCaretPosition());
        } catch (UnsupportedFlavorException ex) {
            Logger.getLogger(Popupmenuu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Popupmenuu.class.getName()).log(Level.SEVERE, null, ex);
        }
                    

    }//GEN-LAST:event_pegarActionPerformed

    private void seleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarActionPerformed
        // TODO add your handling code here:
        area.selectAll();
    }//GEN-LAST:event_seleccionarActionPerformed

    private void tipografiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipografiaActionPerformed
        area.setFont(new Font(java.util.ResourceBundle.getBundle("popupmenu/Bundle").getString("ARIAL"), Font.PLAIN, 14));                   
    }//GEN-LAST:event_tipografiaActionPerformed

    private void tipografia2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipografia2ActionPerformed
        area.setFont(new Font(java.util.ResourceBundle.getBundle("popupmenu/Bundle").getString("COURIER NEW"), Font.BOLD, 16));
    }//GEN-LAST:event_tipografia2ActionPerformed

    private void tipografia3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipografia3ActionPerformed
        area.setFont(new Font(java.util.ResourceBundle.getBundle("popupmenu/Bundle").getString("TIMES NEW ROMAN"), Font.ITALIC, 14));
    }//GEN-LAST:event_tipografia3ActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        // TODO add your handling code here:ç
        String palabra=JOptionPane.showInputDialog(this,java.util.ResourceBundle.getBundle("popupmenu/Bundle").getString("INTRODUCE PALABRA A BUSCAR"));
        String texto= area.getText();
        int posicion = texto.indexOf(palabra);

        if (posicion >= 0) {
            // Mover el cursor a la posición de la palabra encontrada
            area.setCaretPosition(posicion);
            area.requestFocus(); // Enfocar el JTextArea
            JOptionPane.showMessageDialog(this, java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("popupmenu/Bundle").getString("PALABRA ENCONTRADA EN LA POSICIÓN: {0}"), new Object[] {posicion}));
        } else {
            // Mostrar mensaje si no se encuentra la palabra
            JOptionPane.showMessageDialog(this, java.util.ResourceBundle.getBundle("popupmenu/Bundle").getString("PALABRA NO ENCONTRADA."));
        }

            
        
    }//GEN-LAST:event_buscarActionPerformed

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        // TODO add your handling code here:
        puntoPopup=evt.getPoint();
    }//GEN-LAST:event_jTable1MouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Popupmenuu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Popupmenuu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Popupmenuu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Popupmenuu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Popupmenuu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPopupMenu Menu;
    private javax.swing.JPopupMenu Menu2;
    private javax.swing.JTextArea area;
    private javax.swing.JMenuItem buscar;
    private javax.swing.JMenuItem copiar;
    private javax.swing.JMenuItem cortar;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JMenuItem pegar;
    private javax.swing.JMenuItem seleccionar;
    private javax.swing.JMenu tipo;
    private javax.swing.JMenuItem tipografia;
    private javax.swing.JMenuItem tipografia2;
    private javax.swing.JMenuItem tipografia3;
    // End of variables declaration//GEN-END:variables
}
