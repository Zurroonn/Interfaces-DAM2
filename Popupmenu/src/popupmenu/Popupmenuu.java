/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package popupmenu;

import java.awt.Font;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Manana
 */
public class Popupmenuu extends javax.swing.JFrame {

    /**
     * Creates new form Popupmenuu
     */
    public Popupmenuu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Menu = new javax.swing.JPopupMenu();
        copiar = new javax.swing.JMenuItem();
        cortar = new javax.swing.JMenuItem();
        pegar = new javax.swing.JMenuItem();
        seleccionar = new javax.swing.JMenuItem();
        tipo = new javax.swing.JMenu();
        tipografia = new javax.swing.JMenuItem();
        tipografia2 = new javax.swing.JMenuItem();
        tipografia3 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();

        copiar.setText("copiar");
        copiar.setToolTipText("");
        copiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiarActionPerformed(evt);
            }
        });
        Menu.add(copiar);

        cortar.setText("cortar");
        cortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cortarActionPerformed(evt);
            }
        });
        Menu.add(cortar);

        pegar.setText("pegar");
        pegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pegarActionPerformed(evt);
            }
        });
        Menu.add(pegar);

        seleccionar.setText("seleccionar");
        seleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarActionPerformed(evt);
            }
        });
        Menu.add(seleccionar);

        tipo.setText("jMenu1");

        tipografia.setText("tipografia");
        tipografia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipografiaActionPerformed(evt);
            }
        });
        tipo.add(tipografia);

        tipografia2.setText("tipografia2");
        tipografia2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipografia2ActionPerformed(evt);
            }
        });
        tipo.add(tipografia2);

        tipografia3.setText("tipografia3");
        tipografia3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipografia3ActionPerformed(evt);
            }
        });
        tipo.add(tipografia3);

        Menu.add(tipo);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        area.setColumns(20);
        area.setRows(5);
        jScrollPane1.setViewportView(area);
        area.setComponentPopupMenu(Menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void copiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiarActionPerformed
        // TODO add your handling code here:
        String contenido= (String) area.getSelectedText();
        StringSelection selection = new StringSelection(contenido);
        Toolkit.getDefaultToolkit().getSystemClipboard().setContents(selection, null);
    }//GEN-LAST:event_copiarActionPerformed

    private void cortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cortarActionPerformed
        // TODO add your handling code here:
        String contenido= (String) area.getSelectedText();
        StringSelection selection = new StringSelection(contenido);
        Toolkit.getDefaultToolkit().getSystemClipboard().setContents(selection, null);
        area.replaceSelection("");                 
    }//GEN-LAST:event_cortarActionPerformed

    private void pegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pegarActionPerformed
        // TODO add your handling code here:
        String contenidoPortapapeles;
        try {
            contenidoPortapapeles = (String) Toolkit.getDefaultToolkit()
                    .getSystemClipboard()
                    .getData(java.awt.datatransfer.DataFlavor.stringFlavor);
            area.replaceSelection("");
            area.insert(contenidoPortapapeles, area.getCaretPosition());
        } catch (UnsupportedFlavorException ex) {
            Logger.getLogger(Popupmenuu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Popupmenuu.class.getName()).log(Level.SEVERE, null, ex);
        }
                    

    }//GEN-LAST:event_pegarActionPerformed

    private void seleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarActionPerformed
        // TODO add your handling code here:
        area.selectAll();
    }//GEN-LAST:event_seleccionarActionPerformed

    private void tipografiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipografiaActionPerformed
        
        area.setFont(new Font("Arial", Font.PLAIN, 14));           
        
        

    }//GEN-LAST:event_tipografiaActionPerformed

    private void tipografia2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipografia2ActionPerformed
        area.setFont(new Font("Courier New", Font.BOLD, 16));
    }//GEN-LAST:event_tipografia2ActionPerformed

    private void tipografia3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipografia3ActionPerformed
area.setFont(new Font("Times New Roman", Font.ITALIC, 14));
    }//GEN-LAST:event_tipografia3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Popupmenuu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Popupmenuu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Popupmenuu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Popupmenuu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Popupmenuu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPopupMenu Menu;
    private javax.swing.JTextArea area;
    private javax.swing.JMenuItem copiar;
    private javax.swing.JMenuItem cortar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem pegar;
    private javax.swing.JMenuItem seleccionar;
    private javax.swing.JMenu tipo;
    private javax.swing.JMenuItem tipografia;
    private javax.swing.JMenuItem tipografia2;
    private javax.swing.JMenuItem tipografia3;
    // End of variables declaration//GEN-END:variables
}
